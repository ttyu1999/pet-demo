:root {
  /* Step 0: 10.00px → 15.00px */
  --step-0: clamp(0.625rem, 0.5804rem + 0.2232vw, 0.9375rem);

  /* Step 1: 12.00px → 18.75px */
  --step-1: clamp(0.75rem, 0.6897rem + 0.3013vw, 1.1719rem);

  /* Step 2: 14.40px → 23.44px */
  --step-2: clamp(0.9rem, 0.8193rem + 0.4036vw, 1.465rem);

  /* Step 3: 17.28px → 29.30px */
  --step-3: clamp(1.08rem, 0.9727rem + 0.5366vw, 1.8313rem);

  /* Step 4: 20.74px → 36.62px */
  --step-4: clamp(1.2963rem, 1.1545rem + 0.7089vw, 2.2888rem);

  /* Step 5: 24.88px → 45.78px */
  --step-5: clamp(1.555rem, 1.3684rem + 0.933vw, 2.8613rem);

  /* Step 6: 29.86px → 57.22px */
  --step-6: clamp(1.8663rem, 1.622rem + 1.2214vw, 3.5763rem);

  /* Step 7: 35.83px → 71.53px */
  --step-7: clamp(2.2394rem, 1.9206rem + 1.5938vw, 4.4706rem);

  /* Step 8: 43.00px → 89.41px */
  --step-8: clamp(2.6875rem, 2.2731rem + 2.0719vw, 5.5881rem);

  /* Step 9: 51.60px → 111.76px */
  --step-9: clamp(3.225rem, 2.6879rem + 2.6857vw, 6.985rem);

  /* Step 10: 61.92px → 139.70px */
  --step-10: clamp(3.87rem, 3.1755rem + 3.4723vw, 8.7313rem);

  --bg-color: hsl(183.21deg 100% 32.94%);
  --main-color: hsl(0 0% 100%);
}

::-webkit-scrollbar {
  width: .5rem;
}

::-webkit-scrollbar-button {
  background: transparent;
  border-radius: .3rem;
}

::-webkit-scrollbar-thumb {
  border-radius: .3rem;
  background-color: var(--main-color);
}

::-webkit-scrollbar-track {
  box-shadow: transparent;
}

* {
  padding: 0;
  margin: 0;
  list-style-type: none;
  box-sizing: border-box;
}

html {
  font-size: var(--step-0);
}

body {
  color: var(--main-color);
  font-family: 'Lato', sans-serif;
  font-weight: 300;
  line-height: 2;
  height: 100dvh;

  background-color: var(--bg-color);
  transition: background-color .5s ease,
              color .5s ease;

  overflow: hidden;
}

.prompt {
  position: fixed;
  inset: 0;
  z-index: 100;
}

input, button {
  font-weight: 100;
  font-family: 'Lato', sans-serif;
}

:lang(zh) {
  letter-spacing: calc(var(--step-0) * .15);
}

a {
  color: var(--main-color);
  text-decoration: none;
  display: inline-block;
}

img {
  max-width: 100%;
  vertical-align: middle;
}

h1 {
  line-height: 1;
}

body > header {
  --inset: 2.5%;
  position: fixed;
  z-index: 99;
  inset: var(--inset);
  pointer-events: none;
}

body > header .group {
  margin: auto;

  display: flex;
  align-items: center;

  pointer-events: auto;

  position: relative;
}

body > header .logo svg path {
  visibility: visible;
  fill: var(--main-color);
}

body > header .logo_en {
  margin-inline-end: auto;
}

body > header .logo_zh {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}

body > header nav {
  position: fixed;
  bottom: var(--inset);
}

body > header nav li label {
  position: relative;
}

body > header nav li:not(:last-of-type) label::before {
  content: '';

  width: calc(1rem / 4);
  aspect-ratio: 1 / 1;
  border-radius: 50%;

  position: absolute;
  top: 50%;
  right: -25%;
  translate: 0 -50%;

  background-color: var(--main-color);

  opacity: 0;
}

body > header nav li:not(:last-of-type):hover label::before {
  opacity: 1;
}

body > header nav li:last-of-type {
  position: fixed;
  right: var(--inset);
  bottom: var(--inset);

  writing-mode: vertical-lr;
}

body > header nav li:last-of-type::before,
body > header nav li:last-of-type::after {
  --text-alpha: 0;
  content: '';
  
  height: 1px;

  position: fixed;
  bottom: calc(var(--inset) + 3.5rem);
}


body > header nav li:last-of-type::before {
  width: var(--inset);
  background-color: var(--main-color);

  right: 0;

  opacity: .25;
}

body > header nav li:last-of-type::after {
  width: 1%;
  background-image: linear-gradient(to right, transparent, var(--main-color), transparent);

  right: 1.5%;
  animation: lineMove .75s infinite linear;
}

@keyframes lineMove {
  100% {
    right: -1%;
  }
}

body > header nav label {
  cursor: pointer;
}

body > header nav input[type="radio"] {
  display: none;
}


#canvas {
  position: fixed;
  inset: 0;

  transform: translateZ(0); /* GPU加速用 */
}


body > main {
  height: 100dvh;
  position: relative;
  pointer-events: none;
}

main section {
  position: absolute;
  inset: 12.5vh 5vw;
  
  display: grid;
}

main section + section .container > * {
  pointer-events: auto;
}

main section + section {
  opacity: 0;
  visibility: hidden;
}

main section + section .container {
  width: min(42rem, 90%);
  margin: auto;
}

main .container {
  container: name / inline-size;
}

main .content {
  display: flex;
  flex-direction: column;
  align-items: center;
}

main .container h2 {
  --fs: 0;
  display: flex;
  overflow: hidden;
  font-weight: 400;
  line-height: 1;
  padding-block-end: 3rem;
}

main .active h2 span {
  display: inline-block;
  opacity: 0;
  translate: 0 100%;
  animation: translateUp .9s cubic-bezier(0.23, 1, 0.32, 1) forwards, opacity .7s forwards;
}

main .active .txt {
  opacity: 0;
  translate: 0 25%;
  animation: translateUp 2s .5s cubic-bezier(0.23, 1, 0.32, 1) forwards, opacity 2s .5s forwards;
}

@keyframes opacity {
  to {
    opacity: 1;
  }
}

@keyframes translateUp {
  to {
    translate: 0 0;
  }
}

/* 調整每個字母的延遲時間 */
main .active h2 span:nth-child(1) { animation-delay: 0.1s; }
main .active h2 span:nth-child(2) { animation-delay: 0.15s; }
main .active h2 span:nth-child(3) { animation-delay: 0.2s; }
main .active h2 span:nth-child(4) { animation-delay: 0.25s; }
main .active h2 span:nth-child(5) { animation-delay: 0.3s; }
main .active h2 span:nth-child(6) { animation-delay: 0.35s; }
main .active h2 span:nth-child(7) { animation-delay: 0.4s; }
main .active h2 span:nth-child(8) { animation-delay: 0.45s; }
main .active h2 span:nth-child(9) { animation-delay: 0.55s; }
main .active h2 span:nth-child(10) { animation-delay: 0.6s; }

.banner.active .slogan path {
  animation: text 2.5s ease-in-out forwards;
}

main .slogan {
  margin: auto;
}

main .slogan path {
  fill: transparent;
  stroke: var(--main-color);
  stroke-linejoin: round;
  stroke-linecap: round;
  stroke-dasharray: 100%;
  stroke-dashoffset: 100%;
}

@keyframes text {
  0% {
    stroke-dasharray: 100%;
    stroke-dashoffset: 100%;
  }

  75% {
    fill: transparent;
  }

  100% {
    fill: var(--main-color);
    stroke: var(--main-color);
    stroke-dashoffset: 0;
  }
}



main .about h2 {
  --fs: 25cqi;
  font-size: var(--fs);
}

main .about h2 span {
  letter-spacing: calc(var(--fs) * .1);
}

main .about .txt {
  text-align: justify;
  max-height: 40vh;
  overflow: auto;
  padding-inline-end: 2rem;
}

main .about p + p {
  padding-block-start: calc(var(--step-0) * 2);
}

main .service h2 {
  --fs: 22cqi;
  font-size: var(--fs);
}

main .service h2 span {
  letter-spacing: calc(var(--fs) * .1);
}

main .service ul {
  width: auto;
  counter-reset: counter;
  max-height: 40vh;
  overflow: auto;
}

main .service ul li {
  width: max-content;
  overflow: hidden;
}

main .service ul li span {
  counter-increment: counter;
  display: flex;
  align-items: center;
}

main .service.active ul li span {
  opacity: 0;
  translate: 0 100%;

  animation: translateUp .9s cubic-bezier(0.23, 1, 0.32, 1) forwards,
  opacity .7s forwards;
}

main .service ul li span::before {
  content: counter(counter, decimal-leading-zero) ".";
  display: inline-block;
  width: calc(2rem * 2.5);
  
  font-size: 2rem;
  font-style: italic;
  font-family: Helvetica Neue;
  letter-spacing: calc(2rem * .15);
  line-height: 1.5;
}


main .service ul li:nth-of-type(1) span { animation-delay: 0.5s; }
main .service ul li:nth-of-type(2) span { animation-delay: 0.6s; }
main .service ul li:nth-of-type(3) span { animation-delay: 0.7s; }
main .service ul li:nth-of-type(4) span { animation-delay: 0.8s; }
main .service ul li:nth-of-type(5) span { animation-delay: 0.9s; }
main .service ul li:nth-of-type(6) span { animation-delay: 1.0s; }
main .service ul li:nth-of-type(7) span { animation-delay: 1.1s; }
main .service ul li:nth-of-type(8) span { animation-delay: 1.2s; }
main .service ul li:nth-of-type(9) span { animation-delay: 1.3s; }
main .service ul li:nth-of-type(10) span { animation-delay: 1.4s; }
main .service ul li:nth-of-type(11) span { animation-delay: 1.5s; }
main .service ul li:nth-of-type(12) span { animation-delay: 1.6s; }




main .contact .container {
  width: min(60rem, 90%);
}

main .contact h2 {
  --fs: 16.5cqi;
  font-size: var(--fs);
}

main .contact h2 span {
  letter-spacing: calc(var(--fs) * .1);
}

main .contact form {
  max-height: 40vh;
  overflow: auto;
}

main .contact .form {
  display: flex;
  flex-wrap: wrap;
  gap: 2rem 4%;
}

main .contact .form > * {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: 46%;

  overflow: hidden;
}

main .contact .need fieldset {
  border: none;
}

main .contact .need ul {
  display: flex;
  flex-wrap: wrap;
  /* justify-content: space-between; */
}

main .contact .need ul li {
  display: flex;
}

main .contact .name {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

main .contact .message {
  flex-basis: 100%;
}

main .contact .remind {
  flex-basis: 73%;
}

main .contact .remind > div {
  display: inline-block;
}

main .contact .remind a {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

main .contact .remind svg {
  margin-block-start: 3px;
  fill: var(--main-color);
}

main .contact .remind p {
  text-align: justify;
}

main .contact .submit {
  flex-basis: 23%;

  position: relative;

  display: flex;
  justify-content: flex-end;
  align-items: flex-end;
}

main .contact .submit .bg {
  margin-inline-start: auto;
  background-color: var(--main-color);
  border-radius: 50%;

  transition: background-color .3s ease-in-out;
}

main .contact .submit input {
  color: var(--bg-color);
  width: 100%;
  aspect-ratio: 1 / 1;
  background-color: transparent;
  border: none;
  padding: 1.25rem;

  cursor: pointer;

  position: relative;
}

main .contact.active legend,
main .contact.active :is(.name, .email, .phone, .message) label {
  font-size: 1.2rem;
  letter-spacing: calc(1.15rem * .1);
  /* font-weight: bold; */
  display: inline-block;
  /* padding-inline-start: .75rem; */
  opacity: 0;
  translate: 0 50%;
  animation: translateUp .9s 1s cubic-bezier(0.23, 1, 0.32, 1) forwards,
  opacity .7s 1s forwards;

  position: relative;
}

/* main .contact.active legend::before,
main .contact.active :is(.name, .email, .phone, .message) label:before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  translate: 0 -50%;

  width: calc(1rem * 0.15);
  height: 40%;

  background-color: var(--main-color);
} */

main .contact.active .need label {
  opacity: 0;
  translate: 0 50%;
  animation: translateUp 1s 2s cubic-bezier(0.23, 1, 0.32, 1) forwards,
  opacity .8s 2s forwards;
}

main .contact.active :is(.name, .email, .phone, .message) input {
  display: block;
  width: 0;
  animation: width 1s 2s cubic-bezier(0.23, 1, 0.32, 1) forwards;
}

main .contact.active :is(.remind, .submit) > * {
  opacity: 0;
  translate: 0 50%;
  animation: translateUp 1s 2.5s cubic-bezier(0.23, 1, 0.32, 1) forwards,
  opacity .8s 2.5s forwards;
}

@keyframes width {
  to {
    width: 100%;
  }
}

main .contact input[type="radio"] {
  display: none;
}

main .contact input[type="radio"] + label {
  position: relative;
  padding-inline-start: 1.5rem;
}

main .contact .need li:not(:last-of-type) label {
  margin-inline-end: 1rem;
}

main .contact input[type="radio"] + label::before,
main .contact input[type="radio"] + label::after {
  content: "";
  position: absolute;
  top: 50%;
  translate: 0 -50%;
  aspect-ratio: 1 / 1;
  border-radius: 50%;
}

main .contact input[type="radio"] + label::before {
  left: 0;
  width: 1rem;
  border: 1px solid var(--main-color);
}

main .contact input[type="radio"] + label::after {
  left: calc((1rem + 2px - 4.5px ) / 2);
  width: 4.5px;
}

main .contact input[type="radio"]:checked + label::after {
  background-color: var(--main-color);
}

main .contact input[type="text"] {
  color: var(--main-color);
  font-size: 1rem;
  width: 100%;
  background-color: transparent;
  border: none;
  border-radius: 0;
  border-block-end: calc(1rem * 0.05) solid var(--main-color);
  outline: none;
  padding-block: .5rem;
}




main .portfolio {
  pointer-events: none;

  display: grid;
}

main .portfolio .container {
  width: min(72rem, 90%);
  height: 100%;
  translate: 0 10%;
  opacity: 0;
  transition: translate 1s cubic-bezier(0.23, 1, 0.32, 1),
              opacity .8s;

  pointer-events: none;
}

main .portfolio.active .container {
  translate: 0 0;
  opacity: 1;
}

main .portfolio :is(.group, .wrapper) {
  width: 100%;
  height: 100%;
  position: relative;

  pointer-events: none;
}

main .portfolio .group {
  display: flex;
  align-items: center;
  gap: 1.5%;
}

main .portfolio .wrapper {
  order: 2;
}

main .portfolio .slide {
  position: absolute;
  inset: 0;
  display: grid;

  opacity: 0;
  visibility: hidden;
  z-index: 0;
}

main .portfolio .slide.active {
  opacity: 1;
  visibility: visible;
  z-index: 1;
  pointer-events: none;
}

main .portfolio .slide.active .blob path {
  animation: changePath 5s ease-in-out infinite alternate;
  animation-play-state: paused;
}

main .portfolio .slide.active .blob path.hover {
  animation-play-state: running;
}

main .portfolio #shape {
  width: 100%;
  height: 100%;
  margin: auto;
}

main .portfolio.active #shape image {
  pointer-events: auto;
}

main .portfolio .txt_box {
  --inset: 2%;
  width: 100%;
  height: 100%;

  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;

  pointer-events: none;

  mix-blend-mode: difference;

}

main .portfolio :is(.type_text, .wrap) {
  position: absolute;
  right: var(--inset);

  text-shadow: calc(1rem * 0.05) calc(1rem * 0.05) var(--bg-color);

  pointer-events: auto;

  opacity: 1;
}

main .portfolio .type_text {
  top: var(--inset);
}

main .portfolio .type_text::before {
  content: '';
  position: absolute;
  top: 50%;
  right: 105%;
  translate: 0 -50%;

  width: 4rem;
  height: 1px;
  background-color: var(--main-color);
}

main .portfolio .wrap {
  bottom: var(--inset);
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

main .portfolio .title_text {
  font-size: var(--step-4);
  letter-spacing: calc(var(--step-4) * .15);
}

main .portfolio .button {
  cursor: pointer;
  pointer-events: auto;
  scale: 1 1.25;
}

main .portfolio .button-prev {
  order: 1;
}

main .portfolio .button-next {
  order: 3;
}

main .portfolio .button svg {
  height: 5vh;
}

main .portfolio .button polygon {
  transition: all .5s ease;
  fill: var(--main-color);
  stroke: var(--main-color);
}


/* https://10015.io/tools/svg-blob-generator */
/* Growth: 8 */
/* Edge Count: 14 */
@keyframes changePath {
  16.666% {
    d: path("M452.5,285Q426,330,399.5,368.5Q373,407,332,435Q291,463,239.5,465Q188,467,149,435Q110,403,73.5,370.5Q37,338,20.5,289Q4,240,32,196.5Q60,153,87.5,118Q115,83,155.5,64.5Q196,46,242.5,35Q289,24,338.5,39.5Q388,55,402,105Q416,155,447.5,197.5Q479,240,452.5,285Z");
  }

  33.333% {
    d: path("M440,287Q435,334,401.5,367Q368,400,329.5,431.5Q291,463,243,450Q195,437,157.5,414Q120,391,81.5,363Q43,335,33.5,287.5Q24,240,33,192.5Q42,145,70,103.5Q98,62,146,49.5Q194,37,238.5,44.5Q283,52,335.5,53.5Q388,55,420.5,96Q453,137,449,188.5Q445,240,440,287Z");
  }

  50% {
      d: path("M452.5,286.5Q434,333,405.5,372.5Q377,412,334.5,440.5Q292,469,241,464Q190,459,148.5,433Q107,407,75.5,370.5Q44,334,26,287Q8,240,31.5,195.5Q55,151,82.5,114.5Q110,78,148.5,43.5Q187,9,237,20.5Q287,32,326.5,57Q366,82,396.5,116Q427,150,449,195Q471,240,452.5,286.5Z");
  }

  66.666% {
    d: path("M453.5,290Q447,340,415,379.5Q383,419,336,437.5Q289,456,238.5,463Q188,470,143,444Q98,418,73,375Q48,332,42.5,286Q37,240,51,198Q65,156,80,107Q95,58,143.5,43Q192,28,238,37.5Q284,47,322,68Q360,89,389.5,121.5Q419,154,439.5,197Q460,240,453.5,290Z");
  }

  83.333% {
    d: path("M443.5,286Q431,332,401.5,368.5Q372,405,331.5,433.5Q291,462,243,450.5Q195,439,146,429.5Q97,420,79.5,373Q62,326,39,283Q16,240,24.5,190Q33,140,68,104.5Q103,69,148.5,54.5Q194,40,240,39.5Q286,39,325,61.5Q364,84,406,112Q448,140,452,190Q456,240,443.5,286Z");
  }
}


@media screen and (width > 769px) {
  main section + section {
    background-color: #ffffff2e;
    border-radius: 5.5rem;
  }
}

@media screen and (width < 769px) {
  main .container h2 {
    padding-block-end: 1.5rem;
  }

  main .about h2 {
    --fs: 18.75cqi;
  }

  main .service h2 {
    --fs: 16.5cqi;
  }

  main .contact h2 {
    --fs: 12.375cqi;
  }

  main .contact .form {
    gap: 1rem 4%;
  }
}

@media screen and (width < 601px) {
  main .contact .need {
    flex-basis: 100%;
  }
}